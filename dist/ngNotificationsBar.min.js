/*! ng-notifications-bar - v0.0.7 (https://github.com/alexanderbeletsky/ng-notifications-bar) */
!function(root,factory){"object"==typeof exports?module.exports=factory(root,require("angular")):"function"==typeof define&&define.amd?define(["angular"],function(angular){return root.ngNotificationsBar=factory(root,angular)}):root.ngNotificationsBar=factory(root,root.angular)}(this,function(window,angular){var module=angular.module("ngNotificationsBar",[]);return module.provider("notificationsConfig",function(){function setHideDelay(value){config.hideDelay=value}function getHideDelay(){return config.hideDelay}function setAcceptHTML(value){config.acceptHTML=value}function getAcceptHTML(){return config.acceptHTML}function setAutoHide(value){config.autoHide=value}function getAutoHide(){return config.autoHide}function setSaveResponse(value){config.saveReponse=value}function getSaveResponse(){return config.saveReponse}function setCookiePrefix(value){config.cookiePrefix=value}function getCookiePrefix(){return config.cookiePrefix}var config={hideDelay:3e3,autoHide:!1,acceptHTML:!1,saveReponse:!1,cookiePrefix:"ngNotificationsBar"};return{setHideDelay:setHideDelay,setAutoHide:setAutoHide,setAcceptHTML:setAcceptHTML,setSaveResponse:setSaveResponse,setCookiePrefix:setCookiePrefix,$get:function(){return{getHideDelay:getHideDelay,getAutoHide:getAutoHide,getAcceptHTML:getAcceptHTML,getSaveResponse:getSaveResponse,getCookiePrefix:getCookiePrefix}}}}),module.factory("notifications",function($rootScope,$cookieStore,notificationsConfig){var getCookieName=function(){return notificationsConfig.getCookiePrefix()+"_notificationsToIgnore"},setCookie=function(value){$cookieStore.put(getCookieName(),value)},normalizeIdForCookie=function(id){return id.split("_").splice(1,1).toString()},notificationFactory={showError:function(message){$rootScope.$broadcast("notifications:error",message)},showWarning:function(message){$rootScope.$broadcast("notifications:warning",message)},showSuccess:function(message){$rootScope.$broadcast("notifications:success",message)},getCookie:function(){return $cookieStore.get(getCookieName())},deleteCookie:function(){$cookieStore.remove(getCookieName())},ignoreNotification:function(id){var currentIgnoredNotifications=this.getCookie()||{};currentIgnoredNotifications[normalizeIdForCookie(id)]=!0,setCookie(currentIgnoredNotifications)},isNotificationIgnored:function(id){var currentIgnoredNotifications=this.getCookie()||{};return currentIgnoredNotifications[normalizeIdForCookie(id)]?!0:!1}};return notificationFactory}),module.directive("notificationsBar",function($timeout,notificationsConfig){return{restrict:"EA",template:function(){return notificationsConfig.getAcceptHTML()?'					<div class="notifications-container" ng-if="notificationList.length">						<div class="{{note.type}}" ng-repeat="note in notificationList">							<span class="message" ng-bind-html="note.message"></span>							<span class="glyphicon glyphicon-remove close-click" ng-click="close(note)"></span>						</div>					</div>				':'					<div class="notifications-container" ng-if="notificationList.length">						<div class="{{note.type}}" ng-repeat="note in notificationList">							<span class="message">{{note.message}}</span>							<span class="glyphicon glyphicon-remove close-click" ng-click="close(note)"></span>						</div>					</div>				'},controllerAs:"ngNotificationsCtrl",controller:function($scope,notifications){var notificationFactory=notifications;$scope.notificationList=[],$scope.removeById=function(id){$scope.notificationList.every(function(el,index){return el.id===id?(el.saveResponse&&notificationFactory.ignoreNotification(el.id),$scope.notificationList.splice(index,1),!1):!0})},$scope.close=function(notification){$scope.removeById(notification.id)},$scope.createId=function(id){var moduleKey="notif",timestamp=String((new Date).getTime());return[moduleKey,id.replace(/_/g,"-"),timestamp].join("_")},$scope.normalizeNotificationData=function(notificationData,type){var result={id:String(notificationData.id||Math.floor(128*Math.random())),hide:notificationsConfig.getAutoHide(),hideDelay:notificationsConfig.getHideDelay(),saveResponse:notificationsConfig.getSaveResponse(),type:type};return"object"==typeof notificationData?(result.message=notificationData.message,"boolean"==typeof notificationData.hide&&(result.hide=notificationData.hide),"boolean"==typeof notificationData.hideDelay&&(result.hideDelay=notificationData.hideDelay),"boolean"==typeof notificationData.saveResponse&&(result.saveResponse=notificationData.saveResponse)):"string"==typeof notificationData&&(result.message=notificationData),result.id=$scope.createId(result.id),result},$scope.notificationHandler=function(event,data,type){var notificationData=$scope.normalizeNotificationData(data,type);if(!notificationFactory.isNotificationIgnored(notificationData.id)&&($scope.notificationList.push(notificationData),notificationData.hide))var timer=$timeout(function(){$scope.removeById(notificationData.id),$timeout.cancel(timer)},notificationData.hideDelay)}},link:function($scope){$scope.$on("notifications:error",function(event,data){$scope.notificationHandler(event,data,"error")}),$scope.$on("notifications:warning",function(event,data){$scope.notificationHandler(event,data,"warning")}),$scope.$on("notifications:success",function(event,data){$scope.notificationHandler(event,data,"success")})}}}),module});